pch=ifelse(newd$condition=="no_reward", 15,4),
bg='white',
col=ifelse(newd$condition=="no_reward", 1,2 ),
)
points(newd$block, newd$fit, lwd=1.5,
pch=22,
col= ifelse(newd$response_space=="space", 5,6 ))
# add legend:
leg1 <- tapply(newd$fit, list(newd$condition), mean)
text(c(16,16), leg1,  labels=gsub("_", " ", names(leg1)),
adj=0, col=ifelse(names(leg1)=="no_reward", 1,2), cex=.85, xpd=TRUE)
leg2 <- tapply(newd$fit, list(newd$response_space), mean)
text(c(16,16), leg2,  labels=gsub("_", " ", names(leg2)),
adj=0, col=ifelse(names(leg2)=="space", 5,6), cex=.85, xpd=TRUE)
library(plotfunctions)
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(3000,5000), # x-range, y-range plot
main="reaction time by block", # title
xlab="block", ylab="reaction time", # labels axes
las=1) # simplify y-axis
# add averages:
points(newd$block, newd$fit, lwd=1.5,
pch=ifelse(newd$condition=="no_reward", 15,4),
bg='white',
col=ifelse(newd$condition=="no_reward", 1,2 ),
)
points(newd$block, newd$fit, lwd=1.5,
pch=22,
col= ifelse(newd$response_space=="space", 7,8 ))
# add legend:
leg1 <- tapply(newd$fit, list(newd$condition), mean)
text(c(16,16), leg1,  labels=gsub("_", " ", names(leg1)),
adj=0, col=ifelse(names(leg1)=="no_reward", 1,2), cex=.85, xpd=TRUE)
leg2 <- tapply(newd$fit, list(newd$response_space), mean)
text(c(16,16), leg2,  labels=gsub("_", " ", names(leg2)),
adj=0, col=ifelse(names(leg2)=="space", 5,6), cex=.85, xpd=TRUE)
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(3000,5000), # x-range, y-range plot
main="reaction time by block", # title
xlab="block", ylab="reaction time", # labels axes
las=1) # simplify y-axis
# add averages:
points(newd$block, newd$fit, lwd=1.5,
pch=ifelse(newd$condition=="no_reward", 15,4),
bg='white',
col=ifelse(newd$condition=="no_reward", 1,2 ),
)
points(newd$block, newd$fit, lwd=1.5,
pch=22,
col= ifelse(newd$response_space=="space", 7,8 ))
# add legend:
leg1 <- tapply(newd$fit, list(newd$condition), mean)
text(c(16,16), leg1,  labels=gsub("_", " ", names(leg1)),
adj=0, col=ifelse(names(leg1)=="no_reward", 1,2), cex=.85, xpd=TRUE)
leg2 <- tapply(newd$fit, list(newd$response_space), mean)
text(c(16,16), leg2,  labels=gsub("_", " ", names(leg2)),
adj=0, col=ifelse(names(leg2)=="space", 7,8), cex=.85, xpd=TRUE)
library(plotfunctions)
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(3000,5000), # x-range, y-range plot
main="reaction time by block", # title
xlab="block", ylab="reaction time", # labels axes
las=1) # simplify y-axis
# add averages:
points(newd$block, newd$fit, lwd=1.5,
pch=ifelse(newd$condition=="no_reward", 15,4),
bg='white',
col=ifelse(newd$condition=="no_reward", 1,2 ),
)
#points(newd$block, newd$fit, lwd=1.5,
#pch=22,
#col= ifelse(newd$response_space=="space", 7,8 ))
lines(newd$block, newd$fit, lwd=1, lty=5, col=ifelse(newd$response_space=="space", 7,8))
# add legend:
leg1 <- tapply(newd$fit, list(newd$condition), mean)
text(c(16,16), leg1,  labels=gsub("_", " ", names(leg1)),
adj=0, col=ifelse(names(leg1)=="no_reward", 1,2), cex=.85, xpd=TRUE)
leg2 <- tapply(newd$fit, list(newd$response_space), mean)
text(c(16,16), leg2,  labels=gsub("_", " ", names(leg2)),
adj=0, col=ifelse(names(leg2)=="space", 7,8), cex=.85, xpd=TRUE)
library(plotfunctions)
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(3000,5000), # x-range, y-range plot
main="reaction time by block", # title
xlab="block", ylab="reaction time", # labels axes
las=1) # simplify y-axis
# add averages:
points(newd$block, newd$fit, lwd=1.5,
pch=ifelse(newd$condition=="no_reward", 15,4),
bg='white',
col=ifelse(newd$condition=="no_reward", 1,2 ),
)
#points(newd$block, newd$fit, lwd=1.5,
#pch=22,
#col= ifelse(newd$response_space=="space", 7,8 ))
lines(newd$block, newd$fit, lwd=1, lty=5)
# add legend:
leg1 <- tapply(newd$fit, list(newd$condition), mean)
text(c(16,16), leg1,  labels=gsub("_", " ", names(leg1)),
adj=0, col=ifelse(names(leg1)=="no_reward", 1,2), cex=.85, xpd=TRUE)
leg2 <- tapply(newd$fit, list(newd$response_space), mean)
text(c(16,16), leg2,  labels=gsub("_", " ", names(leg2)),
adj=0, col=ifelse(names(leg2)=="space", 7,8), cex=.85, xpd=TRUE)
library(plotfunctions)
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(3000,5000), # x-range, y-range plot
main="reaction time by block", # title
xlab="block", ylab="reaction time", # labels axes
las=1) # simplify y-axis
# add averages:
points(newd$block, newd$fit, lwd=1.5,
pch=ifelse(newd$condition=="no_reward", 15,4),
bg='white',
col=ifelse(newd$condition=="no_reward", 1,2 ),
)
points(newd$block, newd$fit, lwd=1.5,
col= ifelse(newd$response_space=="space", 7,8 ))
# add legend:
leg1 <- tapply(newd$fit, list(newd$condition), mean)
text(c(16,16), leg1,  labels=gsub("_", " ", names(leg1)),
adj=0, col=ifelse(names(leg1)=="no_reward", 1,2), cex=.85, xpd=TRUE)
leg2 <- tapply(newd$fit, list(newd$response_space), mean)
text(c(16,16), leg2,  labels=gsub("_", " ", names(leg2)),
adj=0, col=ifelse(names(leg2)=="space", 7,8), cex=.85, xpd=TRUE)
summary(m1)
summary(newd)
table(newd$response_space, newd$condition)
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(3000,5000), # x-range, y-range plot
main="reaction time by block", # title
xlab="block", ylab="reaction time", # labels axes
las=1) # simplify y-axis
# add averages:
points(newd$block, newd$fit, lwd=1.5,
pch=ifelse(newd$condition=="no_reward", 15,4),
bg='white',
col=ifelse(newd$condition=="no_reward", 1,2 ),
)
points(newd$block, newd$fit, lwd=1.5,
col= ifelse(newd$response_space=="space", 7,8 ))
# add legend:
leg1 <- tapply(newd$fit, list(newd$condition), mean)
text(c(16,16), leg1,  labels=gsub("_", " ", names(leg1)),
adj=0, col=ifelse(names(leg1)=="no_reward", 1,2), cex=.85, xpd=TRUE)
leg2 <- tapply(newd$fit, list(newd$response_space), mean)
text(c(16,16), leg2,  labels=gsub("_", " ", names(leg2)),
adj=0, col=ifelse(names(leg2)=="space", 7,8), cex=.85, xpd=TRUE)
library(plyr)
dat.cor <- droplevels(dat[dat$correct > 0,])
avg <- ddply(dat.cor, c("block", "condition"),
summarise,
space=mean(response_space=="space", na.rm=FALSE))
library(plotfunctions)
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(0,1), # x-range, y-range plot
main="space bar pressed", # title
xlab="block", ylab="proportion", # labels axes
ymark=c(0,.5,1), las=1) # simplify y-axis
# add averages:
points(avg$block, avg$space, lwd=1.5,
pch=ifelse(avg$condition=="no_reward", 15,4),
bg='white',
col=ifelse(avg$condition=="no_reward", 1,2 ))
# add legend:
leg <- tapply(avg$space, list(avg$condition), mean)
text(c(16,16), leg,  labels=gsub("_", " ", names(leg)),
adj=0, col=ifelse(names(leg)=="no_reward", 1,2), cex=.85, xpd=TRUE)
summary(no_space.dat$response_time_space)
rm(list=ls())
setwd('C:/Users/user/Documents/MSC AI/MSC AI YEAR 2/Adv stats/R programming/s4273281_assignment1b')
load("data_herlambang.rda")
summary(dat)
#Subjects by block
table(dat$subject, dat$block)
library(plyr)
dat.cor <- droplevels(dat[dat$correct > 0,])
avg <- ddply(dat.cor, c("block", "condition"),
summarise,
space=mean(response_space=="space", na.rm=FALSE))
library(plotfunctions)
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(0,1), # x-range, y-range plot
main="space bar pressed", # title
xlab="block", ylab="proportion", # labels axes
ymark=c(0,.5,1), las=1) # simplify y-axis
# add averages:
points(avg$block, avg$space, lwd=1.5,
pch=ifelse(avg$condition=="no_reward", 15,4),
bg='white',
col=ifelse(avg$condition=="no_reward", 1,2 ))
# add legend:
leg <- tapply(avg$space, list(avg$condition), mean)
text(c(16,16), leg,  labels=gsub("_", " ", names(leg)),
adj=0, col=ifelse(names(leg)=="no_reward", 1,2), cex=.85, xpd=TRUE)
#avg latency per block
avg_latency_block<- ddply(dat.cor, c("block"),
summarise,
latency = mean(response_time_space))
#avg latency per block
avg_latency_block<- ddply(dat.cor, c("block"),
summarise,
latency = mean(response_time_space))
View(avg_latency_block)
#split dataset based on conditions
reward.dat <- subset(dat.cor, condition == "reward")
no_reward.dat <- subset(dat.cor, condition == "no_reward")
#avg latency for reward condition
avg_latency_rew<- ddply(reward.dat, c("condition"),
summarise,
latency = mean(response_time_space))
#avg latency for no_reward condition
avg_latency_no_rew<- ddply(no_reward.dat, c("condition"),
summarise,
latency = mean(response_time_space))
#avg latency per response_space
avg_latency_resp_space<- ddply(dat.cor, c("response_space"),
summarise,
latency = mean(response_time_space))
#avg latency for reward condition with response space
avg_latency_rew_resp_space<- ddply(reward.dat, c("condition", "response_space"),
summarise,
latency = mean(response_time_space))
#avg latency for no_reward condition with response space
avg_latency_no_rew_resp_space<- ddply(no_reward.dat, c("condition", "response_space"),
summarise,
latency = mean(response_time_space))
#split dataset based on response-space
space.dat <- subset(dat.cor, response_space == "space")
no_space.dat <- subset(dat.cor, response_space == "None")
x<- ddply(space.dat, c("condition", "response_space", 'block'),
summarise,
latency = mean(response_time_space))
y<- ddply(no_space.dat, c("condition", "response_space", 'block'),
summarise,
latency = mean(response_time_space))
#Plot for response-space set to space
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(3000,5000), # x-range, y-range plot
main="latency measured for space bar pressed", # title
xlab="block", ylab="resp time", # labels axes
las=1) # simplify y-axis
# add averages:
points(x$block, x$latency, lwd=1.5,
pch=ifelse(x$condition=="no_reward", 15,4),
bg='white',
col=ifelse(x$condition=="no_reward", 1,2 ))
# add legend:
leg <- tapply(x$latency, list(x$condition), mean)
text(c(16,16), leg,  labels=gsub("_", " ", names(leg)),
adj=0, col=ifelse(names(leg)=="no_reward", 1,2), cex=.85, xpd=TRUE)
#Plot for response-space set to none
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(3000,5000), # x-range, y-range plot
main="latency measured for no space bar pressed", # title
xlab="block", ylab="resp time", # labels axes
las=1) # simplify y-axis
# add averages:
points(y$block, y$latency, lwd=1.5,
pch=ifelse(y$condition=="no_reward", 15,4),
bg='white',
col=ifelse(y$condition=="no_reward", 1,2 ))
# add legend:
leg <- tapply(y$latency, list(y$condition), mean)
text(c(16,16), leg,  labels=gsub("_", " ", names(leg)),
adj=0, col=ifelse(names(leg)=="no_reward", 1,2), cex=.85, xpd=TRUE)
qqnorm(dat.cor$response_time_space)
qqline(dat.cor$response_time_space)
summary(no_space.dat$response_time_space)
summary(space.dat$response_time_space)
summary(avg_latency_block$latency)
table(avg_latency_block$latency, avg_latency_block$block)
table(no_space.dat$response_time_space, no_space.dat$response_space)
table(no_space.dat$response_time_space)
table(dat.cor$response_space,dat.cor$response_time_space)
head(dat.cor$response_space,dat.cor$response_time_space)
summary(no_space.dat$response_time_space)
summary(space.dat$response_time_space)
hist(space.dat$response_time_space)
hist(no_space.dat$response_time_space)
hist(space.dat$response_time_space, xlab = 'reaction time', main = 'reaction time for space bar press')
hist(space.dat$response_time_space, xlab = 'reaction time', main = 'reaction time when space bar pressed')
hist(no_space.dat$response_time_space, xlab = 'reaction time', main = 'reaction time without space bar pressed')
hist(space.dat$response_time_space, xlab = 'reaction time (ms)', main = 'reaction time when space bar pressed')
hist(no_space.dat$response_time_space, xlab = 'reaction time (ms)', main = 'reaction time without space bar pressed')
hist(reward.dat$response_time_space)
hist(no_reward.dat$response_time_space)
#inspecting reaction time based on condition
hist(reward.dat$response_time_space, xlab = 'reaction time (ms)', main = 'reaction time for reward condition')
hist(no_reward.dat$response_time_space, xlab = 'reaction time (ms)', main = 'reaction time for non-reward condition')
hist(space.dat$response_time_space, xlab = 'reaction time (ms)', main = 'Density plot when space bar pressed')
hist(no_space.dat$response_time_space, xlab = 'reaction time (ms)', main = 'Density plot without space bar pressed')
#inspecting reaction time based on condition
hist(reward.dat$response_time_space, xlab = 'reaction time (ms)', main = 'Density plot for reward condition')
hist(no_reward.dat$response_time_space, xlab = 'reaction time (ms)', main = 'Density plot for non-reward condition')
#check distribution of reaction times with respect to normal distribution
check_normaldist(dat.cor$response_time_space)
check_normaldist(dat.cor$response_time_space, xlab = 'reaction time (ms)')
check_normaldist(dat.cor$response_time_space, xlab = 'reaction time (ms)')
library(rmarkdown)
install.packages("knitr", type = "binary")
install.packages("knitr", type = "binary")
install.packages("knitr", type = "binary")
install.packages("knitr", type = "binary")
install.packages("knitr", type = "binary")
install.packages("rmarkdown")
install.packages("rmarkdown")
head(table(dat$subject, dat$block))
head(avg_latency_block)
head(avg_latency_rew)
head(avg_latency_no_rew)
avg_latency_rew
avg_latency_no_rew
rm(list==ls())
rm(list=ls())
rm(list=ls())
#load data
load("data_herlambang.rda")
summary(dat)
#Subjects by block
head(table(dat$subject, dat$block))
#Blocks by subject
head(table(dat$condition, dat$block))
head(table(dat$subject, dat$condition, dat$block))
#install.packages('ddply')
#library(ddply)
library(plyr)
dat.cor <- droplevels(dat[dat$correct > 0,])
avg <- ddply(dat.cor, c("block", "condition"),
summarise,
space=mean(response_space=="space", na.rm=FALSE))
library(plotfunctions)
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(0,1), # x-range, y-range plot
main="space bar pressed", # title
xlab="block", ylab="proportion", # labels axes
ymark=c(0,.5,1), las=1) # simplify y-axis
# add averages:
points(avg$block, avg$space, lwd=1.5,
pch=ifelse(avg$condition=="no_reward", 15,4),
bg='white',
col=ifelse(avg$condition=="no_reward", 1,2 ))
# add legend:
leg <- tapply(avg$space, list(avg$condition), mean)
text(c(16,16), leg,  labels=gsub("_", " ", names(leg)),
adj=0, col=ifelse(names(leg)=="no_reward", 1,2), cex=.85, xpd=TRUE)
#avg latency per block
avg_latency_block<- ddply(dat.cor, c("block"),
summarise,
latency = mean(response_time_space))
head(avg_latency_block)
#split dataset based on conditions
reward.dat <- subset(dat.cor, condition == "reward")
no_reward.dat <- subset(dat.cor, condition == "no_reward")
#avg latency for reward condition
avg_latency_rew<- ddply(reward.dat, c("condition"),
summarise,
latency = mean(response_time_space))
avg_latency_rew
#avg latency for no_reward condition
avg_latency_no_rew<- ddply(no_reward.dat, c("condition"),
summarise,
latency = mean(response_time_space))
avg_latency_no_rew
#avg latency per response_space
avg_latency_resp_space<- ddply(dat.cor, c("response_space"),
summarise,
latency = mean(response_time_space))
head(avg_latency_resp_space)
#avg latency for reward condition with response space
avg_latency_rew_resp_space<- ddply(reward.dat, c("condition", "response_space"),
summarise,
latency = mean(response_time_space))
#avg latency for no_reward condition with response space
avg_latency_no_rew_resp_space<- ddply(no_reward.dat, c("condition", "response_space"),
summarise,
latency = mean(response_time_space))
#split dataset based on response-space
space.dat <- subset(dat.cor, response_space == "space")
no_space.dat <- subset(dat.cor, response_space == "None")
x<- ddply(space.dat, c("condition", "response_space", 'block'),
summarise,
latency = mean(response_time_space))
y<- ddply(no_space.dat, c("condition", "response_space", 'block'),
summarise,
latency = mean(response_time_space))
#Plot for response-space set to space
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(3000,5000), # x-range, y-range plot
main="latency measured for space bar pressed", # title
xlab="block", ylab="resp time", # labels axes
las=1) # simplify y-axis
# add averages:
points(x$block, x$latency, lwd=1.5,
pch=ifelse(x$condition=="no_reward", 15,4),
bg='white',
col=ifelse(x$condition=="no_reward", 1,2 ))
# add legend:
leg <- tapply(x$latency, list(x$condition), mean)
text(c(16,16), leg,  labels=gsub("_", " ", names(leg)),
adj=0, col=ifelse(names(leg)=="no_reward", 1,2), cex=.85, xpd=TRUE)
#Plot for response-space set to none
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(3000,5000), # x-range, y-range plot
main="latency measured for no space bar pressed", # title
xlab="block", ylab="resp time", # labels axes
las=1) # simplify y-axis
# add averages:
points(y$block, y$latency, lwd=1.5,
pch=ifelse(y$condition=="no_reward", 15,4),
bg='white',
col=ifelse(y$condition=="no_reward", 1,2 ))
# add legend:
leg <- tapply(y$latency, list(y$condition), mean)
text(c(16,16), leg,  labels=gsub("_", " ", names(leg)),
adj=0, col=ifelse(names(leg)=="no_reward", 1,2), cex=.85, xpd=TRUE)
qqnorm(dat.cor$response_time_space)
qqline(dat.cor$response_time_space)
#inspecting reaction time based on block
summary(avg_latency_block$latency)
table(avg_latency_block$latency, avg_latency_block$block)
#inspecting reaction time based on response_space
summary(no_space.dat$response_time_space)
summary(space.dat$response_time_space)
hist(space.dat$response_time_space, xlab = 'reaction time (ms)', main = 'Density plot when space bar pressed')
hist(no_space.dat$response_time_space, xlab = 'reaction time (ms)', main = 'Density plot without space bar pressed')
#inspecting reaction time based on condition
hist(reward.dat$response_time_space, xlab = 'reaction time (ms)', main = 'Density plot for reward condition')
hist(no_reward.dat$response_time_space, xlab = 'reaction time (ms)', main = 'Density plot for non-reward condition')
#check distribution of reaction times with respect to normal distribution
check_normaldist(dat.cor$response_time_space, xlab = 'reaction time (ms)')
exclude <- c(5001:6000)
library(dplyr)
dat.cor <- dat.cor %>%
filter(!(dat.cor$response_time_space %in% exclude))
summary(dat.cor$response_time_space)
exclude <- c(5001:6000)
#library(dplyr)
dat.cor <- dat.cor %>%
filter(!(dat.cor$response_time_space %in% exclude))
summary(dat.cor$response_time_space)
dat.cor$logRT <- log(dat.cor$response_time_space)
qqnorm(dat.cor$logRT)
qqline(dat.cor$logRT)
hist(dat.cor$logRT)
m1 <- lm(response_time_space ~ block + condition + response_space, data=dat.cor)
summary(m1)
#dat.corr <- as.factor(dat.cor$block)
residuals<-resid(m1)
qqnorm(residuals)
qqline(residuals)
# create a new data file:
newd <- expand.grid(block = 1:14,
condition = c("reward", "no_reward"),
response_space=c("space", "None"),
stringsAsFactors = FALSE)
# generate predictions (fitted values) for each condition:
fv <- predict(m1, newd, se.fit=TRUE)
newd$fit <- fv$fit
newd$se  <- fv$se.fit
head(newd)
#fitted values
val<-fitted(m1)
summary(val)
library(plotfunctions)
# increase labels and left margin:
par(cex=1.1, mar=c(5.1,4.1,4.1,4.1))
# setup empty plot with simplified axes:
emptyPlot(c(0,15), c(3000,5000), # x-range, y-range plot
main="reaction time by block", # title
xlab="block", ylab="reaction time", # labels axes
las=1) # simplify y-axis
# add averages:
points(newd$block, newd$fit, lwd=1.5,
pch=ifelse(newd$condition=="no_reward", 15,4),
bg='white',
col=ifelse(newd$condition=="no_reward", 1,2 ),
)
points(newd$block, newd$fit, lwd=1.5,
col= ifelse(newd$response_space=="space", 7,8 ))
# add legend:
leg1 <- tapply(newd$fit, list(newd$condition), mean)
text(c(16,16), leg1,  labels=gsub("_", " ", names(leg1)),
adj=0, col=ifelse(names(leg1)=="no_reward", 1,2), cex=.85, xpd=TRUE)
leg2 <- tapply(newd$fit, list(newd$response_space), mean)
text(c(16,16), leg2,  labels=gsub("_", " ", names(leg2)),
adj=0, col=ifelse(names(leg2)=="space", 7,8), cex=.85, xpd=TRUE)
