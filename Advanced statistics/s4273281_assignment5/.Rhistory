contrasts(dat$Condition) <- 'contr.treatment'
#check contrast
contrasts(dat$Condition)
m1 <- bam( RT ~ Condition + s(Trial, by = Condition) , data=dat)
summary(m1)
w1 <- bam( RT ~ Condition + s(Trial) + s(Trial, by = Condition) , data=dat)
summary(w1)
w2 <- bam( RT ~  s(Trial) + s(Trial, by = DR) + s(Trial, by = RD), data=dat)
dat$RD <- ifelse(dat$Condition=='RD', 1, 0)
dat$DR <- ifelse(dat$Condition=='DR', 1, 0)
w2 <- bam( RT ~  s(Trial) + s(Trial, by = DR) + s(Trial, by = RD), data=dat)
summary(w2)
summary(m1)
w1 <- bam( RT ~ Condition + s(Trial) + s(Trial, by = Condition) , data=dat)
summary(w1)
w2 <- bam( RT ~  s(Trial) + s(Trial, by = DR) + s(Trial, by = RD), data=dat)
summary(w2)
m1 <- bam( RT ~ Condition + s(Trial, by = Condition) , data=dat)
summary(m1)
w1 <- bam( RT ~ Condition + s(Trial) + s(Trial, by = Condition) , data=dat)
summary(w1)
w2 <- bam( RT ~  s(Trial) + s(Trial, by = DR) + s(Trial, by = RD), data=dat)
summary(w2)
rm(list=ls())
setwd("~/MSC AI/MSC AI YEAR 2/Adv stats/R programming/s4273281_assignment5")
setwd("~/MSC AI/MSC AI YEAR 2/Adv stats/R programming/s4273281_assignment5")
#load packages
library(plyr)
library(plotfunctions)
library(mgcv)    # for GAMM
library(itsadug) # for visualization
library(ggplot2)
#load data
load("data_DykesRivers.rda")
head(dat)
table(dat$Subject, dat$Condition)
unique(dat$Subject)
tail(dat)
#Median RT
median(dat$RT)
#Mean RT
mean(dat$RT)
#Range RT
range(dat$RT)
#boxplot for RT
boxplot(dat$RT, main="Reaction time",
xlab="Reaction time in ms", horizontal = TRUE)
#Boxplot of RT by Condition
boxplot(RT~Condition,data=dat, main="Reaction time by condition",
xlab="Reaction time in ms", ylab="Condition", horizontal = TRUE)
#qqplot to visualise distribution of RTs
qqnorm(dat$RT)
qqline(dat$RT)
#check distribution of reaction times with respect to normal distribution
check_normaldist(dat$RT, xlab = 'reaction time (ms)')
#historgram of RTs
hist(dat$RT, xlab = 'reaction time (ms)', main = 'Histogram for RTs')
#condition as factor
#dat$Condition <- as.factor(dat$Condition)
#ordered factor
#dat$Condition <- as.ordered(dat$Condition)
# change contrast to treatment coding (difference curves)
#contrasts(dat$Condition) <- 'contr.treatment'
#check contrast
#contrasts(dat$Condition)
#condition as factor
dat$Condition <- as.factor(dat$Condition)
#ordered factor
dat$Condition <- as.ordered(dat$Condition)
contrasts(dat$Condition)
#dummy predictors for RD and DR conditions:
dat$RD <- ifelse(dat$Condition=='RD', 1, 0)
dat$DR <- ifelse(dat$Condition=='DR', 1, 0)
#dat$FF <- ifelse(dat$Condition=='FF', 1, 0)
m1 <- bam( RT ~ Condition + s(Trial, by = Condition) , data=dat)
summary(m1)
w1 <- bam( RT ~ Condition + s(Trial) + s(Trial, by = Condition) , data=dat)
summary(w1)
w2 <- bam( RT ~  s(Trial) + s(Trial, by = DR) + s(Trial, by = RD), data=dat)
summary(w2)
dat$ORCond <- factor(dat$Condition, ordered = TRUE,
levels = c("DR", "RD", "FF"))
w2 <- bam( RT ~  s(Trial) + s(Trial, by = DR) + s(Trial, by = RD), data=dat)
summary(w2)
w3 <- bam( RT ~  ORCond + s(Trial) + s(Trial, by = ORCond), data=dat)
summary(w3)
#condition as factor
dat$Condition <- as.factor(dat$Condition)
#check contrast
contrasts(dat$Condition)
#dummy predictors for RD and DR conditions:
dat$RD <- ifelse(dat$Condition=='RD', 1, 0)
dat$DR <- ifelse(dat$Condition=='DR', 1, 0)
#dat$FF <- ifelse(dat$Condition=='FF', 1, 0)
model1 <- bam( RT ~  s(Trial) + s(Trial, by = DR) + s(Trial, by = RD), data=dat)
summary(model1)
rm(list=ls())
setwd("~/MSC AI/MSC AI YEAR 2/Adv stats/R programming/s4273281_assignment5")
#load packages
library(plyr)
library(plotfunctions)
library(mgcv)    # for GAMM
library(itsadug) # for visualization
library(ggplot2)
#load data
load("data_DykesRivers.rda")
head(dat)
table(dat$Subject, dat$Condition)
unique(dat$Subject)
tail(dat)
#Median RT
median(dat$RT)
#Mean RT
mean(dat$RT)
#Range RT
range(dat$RT)
#boxplot for RT
boxplot(dat$RT, main="Reaction time",
xlab="Reaction time in ms", horizontal = TRUE)
#Boxplot of RT by Condition
boxplot(RT~Condition,data=dat, main="Reaction time by condition",
xlab="Reaction time in ms", ylab="Condition", horizontal = TRUE)
#qqplot to visualise distribution of RTs
qqnorm(dat$RT)
qqline(dat$RT)
#check distribution of reaction times with respect to normal distribution
check_normaldist(dat$RT, xlab = 'reaction time (ms)')
#historgram of RTs
hist(dat$RT, xlab = 'reaction time (ms)', main = 'Histogram for RTs')
#check contrast
contrasts(dat$Condition)
#dummy predictors for RD and DR conditions:
dat$RD <- ifelse(dat$Condition=='RD', 1, 0)
dat$DR <- ifelse(dat$Condition=='DR', 1, 0)
#dat$FF <- ifelse(dat$Condition=='FF', 1, 0)
model1 <- bam( RT ~  s(Trial) + s(Trial, by = DR) + s(Trial, by = RD), data=dat)
summary(model1)
m1 <- bam( RT ~  Condition + s(Trial) + s(Trial, by = Condition), data=dat)
summary(m1)
m1 <- bam( RT ~  Condition  + s(Trial, by = Condition), data=dat)
summary(m1)
# PLOT 1
qqnorm(resid(m1))
qqline(resid(m1))
# PLOT 2:
plot(fitted(m1), resid(m1))
abline(h=0)
plot(dat$Trial, resid(m1))
abline(h=0)
# PLOT 3:
acf(resid(m1))
#boxplot
boxplot(resid(m1) ~ dat$Trial)
abline(h=0)
#smooth plot showing the RTs by condition
plot_smooth(m1, view="Trial", plot_all="Condition")
#create histogram of residuals m1
ggplot(data = dat, aes(x = m1$residuals)) +
geom_histogram(fill = 'steelblue', color = 'black') +
labs(title = 'Histogram of Residuals m1', x = 'Residuals', y = 'Frequency')
m1 <- bam( RT ~  Condition + s(Trial, by = Condition), data=dat)
summary(m1)
# PLOT 1
qqnorm(resid(m1))
qqline(resid(m1))
# PLOT 2:
plot(fitted(m1), resid(m1))
abline(h=0)
plot(dat$Trial, resid(m1))
abline(h=0)
# PLOT 3:
acf(resid(m1))
#boxplot
boxplot(resid(m1) ~ dat$Trial)
abline(h=0)
#smooth plot showing the RTs by condition
plot_smooth(m1, view="Trial", plot_all="Condition")
#create histogram of residuals m1
ggplot(data = dat, aes(x = m1$residuals)) +
geom_histogram(fill = 'steelblue', color = 'black') +
labs(title = 'Histogram of Residuals m1', x = 'Residuals', y = 'Frequency')
m2 <- bam( RT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
dat$Subject <- as.factor(dat$Subject)
m2 <- bam( RT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m2)
m2b <- bam( RT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1) + s(Block, Subject, bs='fs', m=1), data=dat)
summary(m2b)
m2b <- bam( RT ~ Condition +  s(Trial, by = Condition) +  s(Block, Subject, bs='fs', m=1), data=dat)
summary(m2b)
m2 <- bam( RT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m2)
# PLOT 1
qqnorm(resid(m2))
qqline(resid(m2))
# PLOT 2:
plot(fitted(m2), resid(m2))
abline(h=0)
plot(dat$Trial, resid(m2))
abline(h=0)
# PLOT 3:
acf(resid(m2))
#smooth plot showing the RTs by condition
plot_smooth(m2, view="Trial", plot_all="Condition")
#create histogram of residuals m2
ggplot(data = dat, aes(x = m2$residuals)) +
geom_histogram(fill = 'steelblue', color = 'black') +
labs(title = 'Histogram of Residuals m2', x = 'Residuals', y = 'Frequency')
#check normal distribution graph for residuals of m2
check_normaldist(m2$residuals, xlab = 'reaction time (ms)', title = 'residuals distribution m2')
#boxplot
boxplot(resid(m2) ~ dat$Trial)
abline(h=0)
m2l <- bam( logRT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
dat$logRT <- log(dat$RT)
m2l <- bam( logRT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m2l)
#inv transform
dat$invRT <- -1000/dat$RT
m2i <- bam( invRT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m2i)
#visualization
par(mfrow=c(1,3), cex=1.1)
# PLOT 1
qqnorm(resid(m2l), pch=16, col=alpha("#00B0F0"))
qqline(resid(m2l))
# PLOT 2
emptyPlot(range(fitted(m2l)), range(resid(m2l)),
h0=0,
xlab="Fitted", ylab="Resid",
xmark=TRUE, ymark=TRUE, las=1)
points(fitted(m2l), resid(m2l), pch=16, col=alpha("#00B0F0"))
# PLOT 3
acf(resid(m2l))
par(mfrow=c(1,3), cex=1.1)
# PLOT 1
qqnorm(resid(m2i), pch=16, col=alpha("#00B0F0"))
qqline(resid(m2i))
# PLOT 2
emptyPlot(range(fitted(m2i)), range(resid(m2i)),
h0=0,
xlab="Fitted", ylab="Resid",
xmark=TRUE, ymark=TRUE, las=1)
points(fitted(m2i), resid(m2i), pch=16, col=alpha("#00B0F0"))
# PLOT 3
acf(resid(m2i))
m2l <- bam( logRT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat, method='ML')
summary(m2l)
m2i <- bam( invRT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat, method='ML')
summary(m2i)
m2 <- bam( RT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat,
methoD='ML')
summary(m2)
compareML(m2, m2l, m2i)
compareML(m2, m2l)
m2l <- bam( logRT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat,
method='ML')
summary(m2l)
m2i <- bam( invRT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat,
method='ML')
summary(m2i)
compareML(m2, m2l)
m2 <- bam( RT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat,
method ='ML')
summary(m2)
compareML(m2, m2l)
compareML(m2, m2i)
compareML(m2, m2i, m2l)
compareML(m2, m2i)
summary(m2)
par(mfrow=c(2,2), cex=0.7)
plot_smooth(m2, view="Trial", plot_all="Condition",
main="Summed effects",
xmark=range(dat$Trial), ymark=TRUE, las=1)
plot_diff(m2, view="Trial", comp=list(Condition=c('RD','DR')),
xmark=range(dat$Trial), ymark=TRUE, las=1)
plot_diff(m2, view="Trial", comp=list(Condition=c('RD','FF')),
xmark=range(dat$Trial), ymark=TRUE, las=1)
plot_diff(m2, view="Trial", comp=list(Condition=c('DR','FF')),
xmark=range(dat$Trial), ymark=TRUE, las=1)
par(mfrow=c(2,2), cex=0.7)
plot_smooth(m2, view="Trial", plot_all="Condition",
main="Summed effects",
xmark=range(dat$Trial), ymark=TRUE, las=1)
plot_diff(m2, view="Trial", comp=list(Condition=c('RD','DR')),
xmark=range(dat$Trial), ymark=TRUE, las=1)
plot_diff(m2, view="Trial", comp=list(Condition=c('RD','FF')),
xmark=range(dat$Trial), ymark=TRUE, las=1)
plot_diff(m2, view="Trial", comp=list(Condition=c('DR','FF')),
xmark=range(dat$Trial), ymark=TRUE, las=1)
c2 <- bam( RT ~ Condition, method="ML", data=dat)
summary(c2)
compareML(m1, c2)
m1 <- bam( RT ~ Condition + s(Trial, by = Condition), method="ML", data=dat)
summary(m1)
c2 <- bam( RT ~ Condition, method="ML", data=dat)
summary(c2)
compareML(m1, c2)
#check contrast
contrasts(dat$Condition)
#dummy predictors for RD and DR conditions:
dat$RD <- ifelse(dat$Condition=='RD', 1, 0)
dat$DR <- ifelse(dat$Condition=='DR', 1, 0)
#dat$FF <- ifelse(dat$Condition=='FF', 1, 0)
model1 <- bam( RT ~  s(Trial) + s(Trial, by = DR) + s(Trial, by = RD), data=dat)
summary(model1)
summary(m1)
m2 <- bam( RT ~ Condition +  s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m2)
m3  <- bam( RT ~ Condition + s(prev.Dur, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m4)
m3  <- bam( RT ~ Condition + s(prev.Dur, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m3)
m4  <- bam( RT ~ s(prev.Dur) + s(prev.Dur, by = RD) + s(prev.Dur, by = DR) + s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m4)
m3  <- bam( RT ~ Condition + s(prev.Dur, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m3)
m4  <- bam( RT ~ Condition  + s(prev.Dur, by = RD) + s(prev.Dur, by = DR) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m4)
m4  <- bam( RT ~ s(prev.Dur, by = RD) + s(prev.Dur, by = DR) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m4)
m3  <- bam( RT ~ s(prev.Dur, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m3)
m4  <- bam( RT ~ s(prev.Dur, by = RD) + s(prev.Dur, by = DR) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m4)
plot(m3)
plot(m4)
# PLOT 1
qqnorm(resid(m4))
qqline(resid(m4))
# PLOT 2:
#emptyPlot(range(fitted(m2)), range(resid(m2)), h0=0,
#xlab="Fitted", ylab="Resid",
#xmark=TRUE, ymark=TRUE, las=1)
#points(fitted(m2), resid(m2), pch=16, col=alpha("steelblue"))
# PLOT 2:
plot(fitted(m4), resid(m4))
abline(h=0)
plot(dat$Trial, resid(m4))
par(mfrow=c(1,3), cex=0.7)
# PLOT 1
qqnorm(resid(m4), pch=16, col=alpha("#00B0F0"))
qqline(resid(m4))
# PLOT 2
emptyPlot(c(1800, 2600), c(-300, 300),
h0=0,
xlab="Fitted", ylab="Resid",
xmark=TRUE, ymark=TRUE, las=1)
points(fitted(m4), resid(m4), pch=16, col=alpha("#00B0F0"))
# PLOT 3
acf(resid(m4))
#visualization for model m3
par(mfrow=c(1,3), cex=0.7)
# PLOT 1
qqnorm(resid(m3), pch=16, col=alpha("#00B0F0"))
qqline(resid(m3))
# PLOT 2
emptyPlot(c(1800, 2600), c(-300, 300),
h0=0,
xlab="Fitted", ylab="Resid",
xmark=TRUE, ymark=TRUE, las=1)
points(fitted(m3), resid(m3), pch=16, col=alpha("#00B0F0"))
# PLOT 3
acf(resid(m3))
#for model m4
par(mfrow=c(1,3), cex=0.7)
# PLOT 1
qqnorm(resid(m4), pch=16, col=alpha("#00B0F0"))
qqline(resid(m4))
# PLOT 2
emptyPlot(c(1800, 2600), c(-300, 300),
h0=0,
xlab="Fitted", ylab="Resid",
xmark=TRUE, ymark=TRUE, las=1)
points(fitted(m4), resid(m4), pch=16, col=alpha("#00B0F0"))
# PLOT 3
acf(resid(m4))
plot_smooth(m3, view="prev.Dur", plot_all="Condition",
main="Summed effects",
xmark=range(dat$Trial), ymark=TRUE, las=1)
plot_smooth(m3, view="prev.Dur", plot_all="Condition")
#visualization for model m3
par(mfrow=c(1,3), cex=0.7)
# PLOT 1
qqnorm(resid(m3), pch=16, col=alpha("#00B0F0"))
qqline(resid(m3))
# PLOT 2
emptyPlot(c(1800, 2600), c(-300, 300),
h0=0,
xlab="Fitted", ylab="Resid",
xmark=TRUE, ymark=TRUE, las=1)
points(fitted(m3), resid(m3), pch=16, col=alpha("#00B0F0"))
# PLOT 3
acf(resid(m3))
#plot with prev.Dur
plot_smooth(m3, view="prev.Dur", plot_all="Condition")
m5  <- bam( RT ~ s(prev.Dur, by = Condition) + s(Trial, by = Condition) + s(Trial, Subject, bs='fs', m=1), data=dat)
summary(m5)
#plot with prev.Dur
plot_smooth(m3, view="prev.Dur", plot_all="Condition")
#plot with prev.Dur
plot_smooth(m3, view="prev.Dur", plot_all="Condition")
#plot with prev.Dur
plot_smooth(m4, view="prev.Dur", plot_all="Condition")
#plot with prev.Dur
plot_smooth(m3, view="prev.Dur", plot_all="Condition")
p1 <- bam(RT ~ s(Block, by=Condition, k=4) + s(Subject, Block, bs='fs', m=1, k=4), data = newdat )
newdat <- ddply(dat, c("Subject", "Block", 'Condition'),
summarise,
RT = mean(RT),
num = length(Trial))
head(newdat)
p1 <- bam(RT ~ s(Block, by=Condition, k=4) + s(Subject, Block, bs='fs', m=1, k=4), data = newdat )
summary(p1)
# PLOT 1
qqnorm(resid(p1))
qqline(resid(p1))
# PLOT 2:
plot(fitted(p1), resid(p1))
abline(h=0)
plot(newdat$Block, resid(p1))
abline(h=0)
# PLOT 3:
acf(resid(p1))
#smooth plot showing the RTs by condition
plot_smooth(p1, view="Block", plot_all="Condition")
#create histogram of residuals m2
ggplot(data = newdat, aes(x = p1$residuals)) +
geom_histogram(fill = 'steelblue', color = 'black') +
labs(title = 'Histogram of Residuals p1', x = 'Residuals', y = 'Frequency')
#check normal distribution graph for residuals of m2
check_normaldist(p1$residuals, xlab = 'reaction time (ms)', title = 'residuals distribution p1')
#boxplot
boxplot(resid(p1) ~ newdat$Block)
abline(h=0)
par(mfrow=c(1,3), cex=0.7)
# PLOT 1
qqnorm(resid(p1), pch=16, col=alpha("#00B0F0"))
qqline(resid(p1))
# PLOT 2
emptyPlot(c(1800, 2600), c(-300, 300),
h0=0,
xlab="Fitted", ylab="Resid",
xmark=TRUE, ymark=TRUE, las=1)
points(fitted(p1), resid(p1), pch=16, col=alpha("#00B0F0"))
# PLOT 3
acf(resid(p1))
f1 <- bam(RT ~ s(Block, by=Condition, k=4) + s(Subject, bs='re') + s(Subject, Block, bs='re') + s(Block, num, bs='fs', m=1, k=4), data = newdat, method = 'ML' )
summary(f1)
#adding random effects and slopes
f1 <- bam(RT ~ s(Block, by=Condition, k=4) + s(Subject, bs='re') + s(Subject, Block, bs='re') + s(Block, num, bs='fs', m=1, k=4), data = newdat, method = 'ML' )
summary(f1)
#VISUALIZATION
par(mfrow=c(1,3), cex=0.8)
# PLOT 1
qqnorm(resid(f1), pch=16, col=alpha("#00B0F0"))
qqline(resid(f1))
# PLOT 2
emptyPlot(range(fitted(f1)), range(resid(f1)),
h0=0,
xlab="Fitted", ylab="Resid",
xmark=TRUE, ymark=TRUE, las=1)
points(fitted(f1), resid(f1), pch=16, col=alpha("#00B0F0"))
# PLOT 3
acf(resid(f1))
#adding random effects and slopes
f1 <- bam(RT ~ s(Block, by=Condition, k=4) + s(Subject, bs='re') + s(Subject, Block, bs='re') + s(Block, num, bs='fs', m=1, k=4), data = newdat, method = 'ML' )
summary(f1)
#VISUALIZATION
par(mfrow=c(1,3), cex=0.8)
# PLOT 1
qqnorm(resid(f1), pch=16, col=alpha("#00B0F0"))
qqline(resid(f1))
# PLOT 2
emptyPlot(range(fitted(f1)), range(resid(f1)),
h0=0,
xlab="Fitted", ylab="Resid",
xmark=TRUE, ymark=TRUE, las=1)
points(fitted(f1), resid(f1), pch=16, col=alpha("#00B0F0"))
# PLOT 3
acf(resid(f1))
##dataset with log transformed RT
newdat2 <- ddply(dat, c("Subject", "Block", 'Condition'),
summarise,
logRT = mean(logRT),
num = length(Trial))
head(newdat2)
#model with logRT
f2 <- bam(RT ~ s(Block, by=Condition, k=4) + s(Subject, bs='re') + s(Subject, Block, bs='re') + s(Block, num, bs='fs', m=1, k=4), data = newdat, discrete = TRUE )
summary(f2)
#VISUALIZATION
par(mfrow=c(1,3), cex=0.8)
# PLOT 1
qqnorm(resid(f2), pch=16, col=alpha("#00B0F0"))
qqline(resid(f2))
# PLOT 2
emptyPlot(range(fitted(f2)), range(resid(f2)),
h0=0,
xlab="Fitted", ylab="Resid",
xmark=TRUE, ymark=TRUE, las=1)
points(fitted(f2), resid(f2), pch=16, col=alpha("#00B0F0"))
# PLOT 3
acf(resid(f2))
acf(resid(f1))
acf(resid(f2))
acf(resid(f1))
acf(resid(p1))
summary(m3)
summary(f1)
summary(m2)
summary(f1)
summary(m2)
summary(f1)
