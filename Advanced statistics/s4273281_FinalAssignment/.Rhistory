title(main="Average accuracy over trials for pre and post test stage", xlab="Trial", ylab="mean accuracy")
points(avg_trial_test$Trial, avg_trial_test$trial_meanACC,
pch=16, col=ifelse(avg_trial_test$Test=='pre', 6, 8))
legend_margin('centerright', legend = c("pre", "post"),
col=c(6, 8), pch = c(16, 16))
m0 <- glmer( ACC ~ Language * Type * Test  + (1|Item) + (1|Subject), data = dat2, family = binomial)
summary(m0)
#Extracting the random effects for subject
re <- ranef(m0)[['Subject']]
head(re)
#plot for avg accuracy by subjects
acc <- tapply(dat2$ACC, list(dat2$Subject), mean)
emptyPlot(range(re[,1]), ylim = c(0,1),
xlab="random intercept", ylab="mean accuracy",
xmark=TRUE, ymark=TRUE, las=1)
points(re[,1], acc, pch=16, col=alpha("steelblue"))
#qqnorm showing distribution of different subjects
qqnorm(re[,1])
qqline(re[,1])
rems <- ranef(ms)[['Subject']]
#Extracting the random effects for subject
re <- ranef(m0)[['Subject']]
head(re)
#plot for avg accuracy by subjects
acc <- tapply(dat2$ACC, list(dat2$Subject), mean)
emptyPlot(range(re[,1]), ylim = c(0,1),
xlab="random intercept", ylab="mean accuracy",
xmark=TRUE, ymark=TRUE, las=1)
points(re[,1], acc, pch=16, col=alpha("steelblue"))
#qqnorm showing distribution of different subjects
qqnorm(re[,1])
qqline(re[,1])
#Extracting the random effects for items
reitem <- ranef(m0)[['Item']]
head(reitem)
#plot for avg accuracy by items
acc_item <- tapply(dat2$ACC, list(dat2$Item), mean)
emptyPlot(range(reitem[,1]), ylim = c(0,1),
xlab="random intercept", ylab="mean accuracy",
xmark=TRUE, ymark=TRUE, las=1)
points(reitem[,1], acc_item, pch=16, col=alpha("steelblue"))
#qqnorm showing distribution of different items
qqnorm(reitem[,1])
qqline(reitem[,1])
#Add (1+Type|Subject) as random slope:
m1 <- glmer( ACC ~ Language * Type * Test  + (1+Type|Subject) + (1|Item), data = dat2, family = binomial)
summary(m1)
#Add (1+Test|Subject) as random slope:
m2 <- glmer( ACC ~ Language * Type * Test  + (1+Test|Subject) + (1|Item), data = dat2, family = binomial)
summary(m2)
newdat <- ddply(dat2, c("Subject", "Test", 'Type', 'Language'),
summarise,
ACC = mean(ACC),
num = length(Trial))
head(newdat)
View(newdat)
#adding random effects and slopes
f1 <- bam(ACC ~ s(Block, by=Condition, k=4) + s(Subject, bs='re') + s(Subject, Language, bs='re') + s(num, bs='fs', m=1, k=4), data = newdat, method = 'ML' )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(Subject, Language, bs='re') + s(num, bs='fs', m=1, k=4), data = newdat, method = 'ML' )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, bs='fs', m=1, k=4), data = newdat, method = 'ML' )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, bs='re'), data = newdat, method = 'ML' )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, Test, bs='fs', m=1, k=4), data = newdat, method = 'ML' )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, Test, bs='fs', m=1, k=4), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, Test, bs='fs', m=1, k=2), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, Test, bs='fs', m=1, k=3), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, Test, bs='fs', m=1, k=10), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, Test, bs='fs', m=1, k=11), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, Test, bs='fs', m=1, k=20), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, Test, bs='fs', m=1, k=25), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, Test, bs='fs', m=1, k=15), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, Test, bs='fs', m=1), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, Test, bs='re'), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test + s(Subject, bs='re') + s(num, bs='re'), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, bs='re'), data = newdat )
summary(f1)
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='re'), data = newdat )
summary(f1)
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs'), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3), data = newdat )
summary(f1)
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='re'), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='fs'), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(num, Subject, bs='fs'), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='fs'), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  +  s(Subject, bs='fs'), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='re'), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='fs', k=20), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='fs', k=30), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='fs', k=40), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='fs', k=50), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='fs', k=60), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='fs', k=60), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='fs', k=2), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='fs', k=10), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, num, bs='fs'), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='fs', m=1), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject, bs='re'), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3) + s(Subject), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test, bs='fs', m=1, k=3), data = newdat )
summary(f1)
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(Test, num,  bs='fs', m=1, k=3), data = newdat )
summary(f1)
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(Test, num,  bs='fs', m=1, k=4), data = newdat )
summary(f1)
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(Test, num,  bs='fs', m=1, k=5), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(Test, num,  bs='fs', m=1, k=2), data = newdat )
summary(f1)
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(Test, num,  bs='fs', m=1), data = newdat )
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(Test, num,  bs='fs', m=1, k=3), data = newdat )
summary(f1)
#adding random effects and slopes
f1 <- bam(ACC ~ Type * Language * Test  + s(num, Test,   bs='fs', m=1, k=3), data = newdat )
summary(f1)
#VISUALIZATION
par(mfrow=c(1,3), cex=0.8)
# PLOT 1
qqnorm(resid(f1), pch=16, col=alpha("#00B0F0"))
qqline(resid(f1))
# PLOT 2
emptyPlot(range(fitted(f1)), range(resid(f1)),
h0=0,
xlab="Fitted", ylab="Resid",
xmark=TRUE, ymark=TRUE, las=1)
points(fitted(f1), resid(f1), pch=16, col=alpha("#00B0F0"))
# PLOT 3
acf(resid(f1))
#VISUALIZATION
# PLOT 1
qqnorm(resid(f1))
qqline(resid(f1))
# PLOT 2:
plot(fitted(f1), resid(f1))
abline(h=0)
# PLOT 3:
acf(resid(f1))
emptyPlot(range(fitted(f1)), range(resid(f1)),
h0=0,
xlab="Fitted", ylab="Resid",
xmark=TRUE, ymark=TRUE, las=1)
points(fitted(f1), resid(f1), pch=16, col=alpha("#00B0F0"))
#VISUALIZATION
# PLOT 1
qqnorm(resid(f1))
qqline(resid(f1))
# PLOT 2:
plot(fitted(f1), resid(f1))
abline(h=0)
# PLOT 3:
acf(resid(f1))
dat3 <- start_event(dat2, column="Time", event=c("Subject", "Trial"))
dat3 <- start_event(dat2, column="Trial", event=c("Subject", "Trial"))
View(dat3)
dat3 <- start_event(dat2, column="Trial", event=c("Subject", "Test"))
dat3 <- start_event(dat2, column="Test", event=c("Subject", "Trial"))
dat3 <- start_event(dat2, column="Trial", event=c("Subject", "Item"))
acf(resid(f1), plot=FALSE)$acf[2]
rho <- 0.2731751
q1 <- bam(ACC ~  Type * Test * Language + s(Subject, bs='re') + s(Item, bs='fs'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
q1 <- bam(ACC ~  Type * Test * Language + s(Subject, Trial, bs='fs', m=1) + s(Item, bs='fs'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
q1 <- bam(ACC ~  Type * Test * Language + s(Subject, Trial, bs='fs', m=1) ,
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
q1 <- bam(ACC ~  Type * Test * Language  + s(Item, bs='fs'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
q1 <- bam(ACC ~  Type * Test * Language ,
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
summary(q1)
q1 <- bam(ACC ~  Type * Test * Language s(Subject, bs='re'),
q1 <- bam(ACC ~  Type * Test * Language + s(Subject, bs='re'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
q1 <- bam(ACC ~  Type * Test * Language + s(Trial, Subject, bs='fs', m=1),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
q1 <- bam(ACC ~  Type * Test * Language + s(Trial),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
summary(q1)
q1 <- bam(ACC ~  Type * Test * Language + s(Item, bs='re'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
dat3$Item <- as.factor(dat3$Item)
q1 <- bam(ACC ~  Type * Test * Language + s(Item, bs='re'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
summary(q1)
dat3$Subject <- as.factor(dat3$Subject)
q1 <- bam(ACC ~  Type * Test * Language + s(Item, bs='re') + s(Subject, bs='re'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
summary(q1)
q1 <- bam(ACC ~  Type * Test * Language + s(Item, bs='re') + s(Subject, bs='re') + s(Trial, Subject, bs='fs', m=1),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
summary(q1)
q1.rho <- bam(ACC ~  Type * Test * Language + s(Item, bs='re') + s(Subject, bs='re') + s(Trial, by = Test),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
summary(q1.rho)
save(q1.rho, file="q1rho.rda", compress='xz')
#VISUALIZATION
# PLOT 1
qqnorm(resid(q1.rho))
qqline(resid(q1.rho))
# PLOT 2:
plot(fitted(q1.rho), resid(q1.rho))
abline(h=0)
# PLOT 3:
acf(resid(q1.rho))
q2 <- bam(ACC ~  Type * Test * Language + s(Trial, Subject, bs='fs', m=1) + s(Item, bs='re'),
data=dat2, family = 'binomial')
dat2$Trial <- as.factor(dat2$Trial)
dat2$Subject <- as.factor(dat2$Subject)
dat2$Item <- as.factor(dat2$Item)
q2 <- bam(ACC ~  Type * Test * Language + s(Trial, Subject, bs='fs', m=1) + s(Item, bs='re'),
data=dat2, family = 'binomial')
q2 <- bam(ACC ~  Type * Test * Language + s(Trial, Subject, bs='fs', m=1) + s(Item, bs='fs'),
data=dat2, family = 'binomial')
q2 <- bam(ACC ~  Type * Test * Language + s(Trial, Subject, bs='fs', m=1, k=3) + s(Item, bs='fs'),
data=dat2, family = 'binomial')
q2 <- bam(ACC ~  Type * Test * Language + s( Subject,Trial, bs='fs', m=1) + s(Item, bs='fs'),
data=dat2, family = 'binomial')
dat2$Trial <- as.numeric(dat2$Trial)
q2 <- bam(ACC ~  Type * Test * Language + s( Subject,Trial, bs='fs', m=1) + s(Item, bs='re'),
data=dat2, family = 'binomial')
summary(q2)
qqnorm(resid(q2))
qqline(resid(q2))
# PLOT 2:
plot(fitted(q2), resid(q2))
abline(h=0)
plot(dat2$Trial, resid(q2))
abline(h=0)
# PLOT 3:
acf(resid(q2))
q1 <- bam(ACC ~  Type * Test * Language + s(Subject, bs='re') + s(Item, bs='re'),
data=dat2, family = 'binomial')
summary(q1)
# PLOT 1
qqnorm(resid(q1))
qqline(resid(q1))
# PLOT 2:
plot(fitted(q1), resid(q1))
abline(h=0)
plot(dat2$Trial, resid(q1))
abline(h=0)
# PLOT 3:
acf(resid(q1))
summary(q1.rho)
qqnorm(resid(q1.rho))
qqline(resid(q1.rho))
# PLOT 2:
plot(fitted(q1.rho), resid(q1.rho))
abline(h=0)
# PLOT 3:
acf(resid(q1.rho))
summary(q1.rho)
q1.rho <- bam(ACC ~  Type * Test * Language + s(Item, bs='re') + s(Subject, bs='re'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
summary(q1.rho)
save(q1.rho, file="q1rho.rda", compress='xz')
#VISUALIZATION
# PLOT 1
qqnorm(resid(q1.rho))
qqline(resid(q1.rho))
# PLOT 2:
plot(fitted(q1.rho), resid(q1.rho))
abline(h=0)
# PLOT 3:
acf(resid(q1.rho))
summary(q1.rho)
x1<- bam(ACC ~  ACC ~ Language + Type + Test +  Type:Test + Language:Test + s(Item, bs='re') + s(Subject, bs='re'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
x1<- bam(ACC ~ Language + Type + Test +  Type:Test + Language:Test + s(Item, bs='re') + s(Subject, bs='re'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
summary(x1)
x1<- bam(ACC ~ Language + Type + Test +  Type:Test  + s(Item, bs='re') + s(Subject, bs='re'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
summary(x1)
#VISUALIZATION
# PLOT 1
qqnorm(resid(x1))
qqline(resid(x1))
# PLOT 2:
plot(fitted(x1), resid(x1))
abline(h=0)
# PLOT 3:
acf(resid(x1))
x1<- bam(ACC ~ Language + Type + Test +  Type:Test + Language:Test + s(Item, bs='fs') + s(Subject, bs='fs'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
summary(x1)
#VISUALIZATION
# PLOT 1
qqnorm(resid(x1))
qqline(resid(x1))
# PLOT 2:
plot(fitted(x1), resid(x1))
abline(h=0)
# PLOT 3:
acf(resid(x1))
q2 <- bam(ACC ~  Type * Test * Language + s( Subject,Trial, bs='fs', m=1) + s(Item, bs='fs'),
data=dat2, family = 'binomial')
summary(q2)
# PLOT 1
qqnorm(resid(q2))
qqnorm(resid(q2))
qqline(resid(q2))
plot(fitted(q2), resid(q2))
abline(h=0)
plot(dat2$Trial, resid(q2))
abline(h=0)
# PLOT 3:
acf(resid(q2))
a1 <- bam( ACC ~ Language + Type + Test + Language:Type + Language:Test + Type:Test + Language:Type:Test
+  s(Subject, bs='re') + s(Item, bs='re'),
data = dat2, family = binomial, method='ML')
summary(a1)
#remove threeway interaction Language:Type:Test
a2 <- bam( ACC ~ Language + Type + Test + Language:Type + Language:Test + Type:Test
+  s(Subject, bs='re') + s(Item, bs='re'),
data = dat2, family = binomial, method='ML')
summary(a2)
compareML(a1, a2)
a3 <- bam( ACC ~ Language + Type + Test + Language:Type + Language:Test
+  s(Subject, bs='re') + s(Item, bs='re'),
data = dat2, family = binomial, method='ML')
summary(a3)
compareML(a2, a3)
compareML(a2, a3)
a3 <- bam( ACC ~ Language + Type + Test + Language:Type + Language:Test
+  s(Subject, bs='re') + s(Item, bs='re'),
data = dat2, family = binomial, method='ML')
summary(a3)
compareML(a2, a3)
#remove two way interaction Language:Test
a4 <- bam( ACC ~ Language + Type + Test + Language:Type  + Type:Test
+  s(Subject, bs='re') + s(Item, bs='re'),
data = dat2, family = binomial, method='ML')
summary(a4)
compareML(a2, a4)
#remove two way interaction  Language:Type
a5 <- bam( ACC ~ Language + Type + Test + Language:Test + Type:Test
+  s(Subject, bs='re') + s(Item, bs='re'),
data = dat2, family = binomial, method='ML')
summary(a5)
compareML(a2, a5)
summary(a3)
summary(a4)
# PLOT 1
qqnorm(resid(a3))
qqline(resid(a3))
# PLOT 2:
plot(fitted(a3), resid(a3))
abline(h=0)
plot(dat2$Trial, resid(a3))
abline(h=0)
# PLOT 3:
acf(resid(a3))
acf(resid(a3), plot=FALSE)$acf[2]
rho <- 0.1030278
dat3$Item <- as.factor(dat3$Item)
dat3$Subject <- as.factor(dat3$Subject)
#setting random intercepts as random smooths to reduce correlation
q1.rho <- bam( ACC ~ Language + Type + Test + Language:Type + Language:Test
+  s(Subject, bs='fs') + s(Item, bs='fs'),
family = 'binomial',
data=dat3,
AR.start=dat3$start.event, rho=rho)
summary(q1.rho)
save(q1.rho, file="q1rho.rda", compress='xz')
#VISUALIZATION
# PLOT 1
qqnorm(resid(q1.rho))
qqline(resid(q1.rho))
# PLOT 2:
plot(fitted(q1.rho), resid(q1.rho))
abline(h=0)
# PLOT 3:
acf(resid(q1.rho))
#Extracting the random effects for subject
re <- ranef(m0)[['Subject']]
head(re)
#plot for avg accuracy by subjects
acc <- tapply(dat2$ACC, list(dat2$Subject), mean)
emptyPlot(range(re[,1]), ylim = c(0,1),
xlab="random intercept for subject", ylab="mean accuracy",
xmark=TRUE, ymark=TRUE, las=1)
points(re[,1], acc, pch=16, col=alpha("steelblue"))
#qqnorm showing distribution of different subjects
qqnorm(re[,1])
qqline(re[,1])
#Extracting the random effects for subject
re <- ranef(m0)[['Subject']]
head(re)
#plot for avg accuracy by subjects
acc <- tapply(dat2$ACC, list(dat2$Subject), mean)
emptyPlot(range(re[,1]), ylim = c(0,1),
xlab="random intercept by subjects", ylab="mean accuracy",
xmark=TRUE, ymark=TRUE, las=1)
points(re[,1], acc, pch=16, col=alpha("steelblue"))
#qqnorm showing distribution of different subjects
qqnorm(re[,1])
qqline(re[,1])
#Extracting the random effects for items
reitem <- ranef(m0)[['Item']]
head(reitem)
#plot for avg accuracy by items
acc_item <- tapply(dat2$ACC, list(dat2$Item), mean)
emptyPlot(range(reitem[,1]), ylim = c(0,1),
xlab="random intercept by items", ylab="mean accuracy",
xmark=TRUE, ymark=TRUE, las=1)
points(reitem[,1], acc_item, pch=16, col=alpha("steelblue"))
#qqnorm showing distribution of different items
qqnorm(reitem[,1])
qqline(reitem[,1])
plot(fitted(s4), resid(s4),
xlab="Fitted s4", ylab="Resid",
pch=16, col=alpha("steelblue"), bty='n')
s4 <- glmer( ACC ~ Language + Type + Test +  Type:Test + Language:Test +
(1+Test|Subject) + (1|Item) , data = dat2, family = binomial)
summary(s4)
plot(fitted(s4), resid(s4),
xlab="Fitted s4", ylab="Resid",
pch=16, col=alpha("steelblue"), bty='n')
abline(h=0, col=alpha(1, f=.25))
plot(s4)
cat(description)
library(ggplot2)
library(lme4)
library(mgcv)
library(itsadug)
library(dplyr)
library(plyr)
library(plotfunctions)
# ... other packages
plot(fitted(s4), resid(s4),
xlab="Fitted s4", ylab="Resid",
pch=16, col=alpha("steelblue"), bty='n')
abline(h=0, col=alpha(1, f=.25))
